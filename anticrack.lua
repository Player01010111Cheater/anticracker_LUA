local Players = game:GetService("Players")
local lp = Players.LocalPlayer

local suspiciousAPIs = {
    "getgenv", "getgc", "getreg", "hookfunction", "checkcaller", "getconnections"
}

-- 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Kick
local success, info = pcall(function()
    return debug.getinfo(lp.Kick)
end)

if not success or (info and info.source ~= "=[C]") then
    warn("üö´ Kick –±—ã–ª –ø–æ–¥–º–µ–Ω—ë–Ω")
    lp:Kick("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–º–µ–Ω–∞ Kick")
end

-- 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ debug.getinfo —Å–∞–º–æ–≥–æ —Å–µ–±—è
local originalDebugInfo = rawget(debug, "getinfo")
if not originalDebugInfo or tostring(originalDebugInfo):find("function: 0x") == false then
    warn("üö´ debug.getinfo –ø–æ–¥–º–µ–Ω—ë–Ω")
    lp:Kick("debug.getinfo –±—ã–ª –∑–∞—Ö—É—á–µ–Ω")
end

-- 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ namecall
local testObj = setmetatable({}, {
    __namecall = function(self, ...)
        return "test"
    end
})

local worked = false
pcall(function()
    worked = testObj:Kick()
end)

if not worked then
    warn("üö´ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ö—É–∫ –Ω–∞ __namecall (–æ–±—Ö–æ–¥ Kick)")
    lp:Kick("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç –∫–∏–∫–∞ —á–µ—Ä–µ–∑ namecall")
end

-- 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∞—Å–Ω—ã—Ö API
for _, api in ipairs(suspiciousAPIs) do
    local fn = rawget(_G, api) or rawget(getfenv(), api)
    if typeof(fn) == "function" then
        warn("üö® –ù–∞–π–¥–µ–Ω –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å: " .. api)
        lp:Kick("–ó–∞–ø—Ä–µ—â—ë–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: " .. api)
    end
end
